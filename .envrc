#!/bin/bash


# Set the default secret manager based on the current operating system
if [[ "$OSTYPE" == "darwin"* ]]; then
    DEFAULT_SECRET_MANAGER="Keychain Access"
elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
    DEFAULT_SECRET_MANAGER="pass"
elif [[ "$OSTYPE" == "msys"* ]]; then
    DEFAULT_SECRET_MANAGER="Windows Credential Manager"
else
    # Unsupported operating system
    echo "Unsupported operating system: $OSTYPE"
    exit 1
fi

# Check if the GitHub access token exists in the default secret manager
if [[ "$DEFAULT_SECRET_MANAGER" == "Keychain Access" ]]; then
    if ! security find-generic-password -s github_access_token > /dev/null 2>&1; then
        echo "Please register the secret in $DEFAULT_SECRET_MANAGER"
        exit 1
    fi
elif [[ "$DEFAULT_SECRET_MANAGER" == "pass" ]]; then
    if ! pass github_access_token > /dev/null 2>&1; then
        echo "Please register the secret in $DEFAULT_SECRET_MANAGER"
        exit 1
    fi
elif [[ "$DEFAULT_SECRET_MANAGER" == "Windows Credential Manager" ]]; then
    if ! cmdkey /list | findstr "github_access_token" > /dev/null 2>&1; then
        echo "Please register the secret in $DEFAULT_SECRET_MANAGER"
        exit 1
    fi
fi

# Retrieve the GitHub access token
if [[ "$DEFAULT_SECRET_MANAGER" == "Keychain Access" ]]; then
    export GITHUB_ACCESS_TOKEN=$(security find-generic-password \
        -s github_access_token -w)
elif [[ "$DEFAULT_SECRET_MANAGER" == "pass" ]]; then
    export GITHUB_ACCESS_TOKEN=$(pass show github_access_token)
elif [[ "$DEFAULT_SECRET_MANAGER" == "Windows Credential Manager" ]]; then
    for /f "tokens=2 delims= " %i in ('cmdkey /generic:github_access_token \
        /username:token /pass:* ^| findstr "Password"') do set \
        GITHUB_ACCESS_TOKEN=%i
fi

# # Set up GitHub CLI authentication
# # Replace YOUR_GITHUB_TOKEN with your actual GitHub personal access token
if gh auth status | grep -q "Logged in to"; then
    # If logged in, print status
    echo "Already authenticated with GitHub CLI"
else
    # If not logged in, authenticate with GitHub CLI using the GITHUB_ACCESS_TOKEN environment variable
    echo "Authenticating with GitHub CLI"
    echo "${GITHUB_ACCESS_TOKEN}" | gh auth login --with-token
fi

# Fetch the list of repositories and store them in an array
repos=($(gh repo list | awk '{print $1}'))

# Export the repositories as an environment variable
export GITHUB_REPOSITORIES="- $(echo ${repos[*]} | sed 's/ /\\n- /g')"

echo GITHUB_REPOSITORIES variable is $GITHUB_REPOSITORIES
